
MiniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000824  000008b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000824  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  0080010e  0080010e  000008c6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000924  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000964  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010c9  00000000  00000000  00000aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b75  00000000  00000000  00001b75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a20  00000000  00000000  000026ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d4  00000000  00000000  0000310c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000604  00000000  00000000  000033e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000583  00000000  00000000  000039e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00003f67  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 95 00 	jmp	0x12a	; 0x12a <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 00 01 	jmp	0x200	; 0x200 <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e2       	ldi	r30, 0x24	; 36
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 33       	cpi	r26, 0x32	; 50
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 67 00 	call	0xce	; 0xce <main>
  9e:	0c 94 10 04 	jmp	0x820	; 0x820 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_16>:

#include <avr/io.h>
#include <avr/interrupt.h>

// Timer0溢出中断服务例程
ISR(TIMER0_OVF_vect) {
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
	// 切换PORTB的状态
	PORTB ^= (1 << 5); // 假设我们要切换的是第5位
  b4:	95 b1       	in	r25, 0x05	; 5
  b6:	80 e2       	ldi	r24, 0x20	; 32
  b8:	89 27       	eor	r24, r25
  ba:	85 b9       	out	0x05, r24	; 5
	EICRA = 0;
  bc:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
}
  c0:	9f 91       	pop	r25
  c2:	8f 91       	pop	r24
  c4:	0f 90       	pop	r0
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	0f 90       	pop	r0
  ca:	1f 90       	pop	r1
  cc:	18 95       	reti

000000ce <main>:

int main(void) {
	// 初始化堆栈指针

	// 设置PORTB的第5位为输出
	DDRB |= (1 << 5);
  ce:	25 9a       	sbi	0x04, 5	; 4

	// 初始化Timer0
	TCCR0A |= (1 << CS00); // 设置定时器，无预分频
  d0:	84 b5       	in	r24, 0x24	; 36
  d2:	81 60       	ori	r24, 0x01	; 1
  d4:	84 bd       	out	0x24, r24	; 36
	TIMSK0 |= (1 << TOIE0); // 允许Timer0溢出中断
  d6:	ee e6       	ldi	r30, 0x6E	; 110
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	81 60       	ori	r24, 0x01	; 1
  de:	80 83       	st	Z, r24

	// 全局使能中断
	sei();
  e0:	78 94       	sei
  e2:	ff cf       	rjmp	.-2      	; 0xe2 <main+0x14>

000000e4 <rgb_off>:
	PORTB |= 1 << RED;
}

void rgb_green() {
	rgb_off();
	PORTB |= 1 << GREEN;
  e4:	2a 98       	cbi	0x05, 2	; 5
  e6:	2c 98       	cbi	0x05, 4	; 5
  e8:	2b 98       	cbi	0x05, 3	; 5
  ea:	08 95       	ret

000000ec <rgb_blue>:
}

void rgb_blue() {
	rgb_off();
  ec:	0e 94 72 00 	call	0xe4	; 0xe4 <rgb_off>
	PORTB |= 1 << BLUE;
  f0:	2b 9a       	sbi	0x05, 3	; 5
  f2:	08 95       	ret

000000f4 <usart_send>:
}

unsigned char usart_receive(void){
	while(!(UCSR0A & (1<<RXC0))); // Wait to receive data
	return UDR0; // Read data from UDR
}
  f4:	e0 ec       	ldi	r30, 0xC0	; 192
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	90 81       	ld	r25, Z
  fa:	95 ff       	sbrs	r25, 5
  fc:	fd cf       	rjmp	.-6      	; 0xf8 <usart_send+0x4>
  fe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 102:	08 95       	ret

00000104 <usart_send_string>:

void usart_send_string(char* str) {
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	ec 01       	movw	r28, r24
	for (int i = 0; str[i]; i++) {
 10a:	88 81       	ld	r24, Y
 10c:	88 23       	and	r24, r24
 10e:	31 f0       	breq	.+12     	; 0x11c <usart_send_string+0x18>
 110:	21 96       	adiw	r28, 0x01	; 1
		usart_send(str[i]);
 112:	0e 94 7a 00 	call	0xf4	; 0xf4 <usart_send>
	while(!(UCSR0A & (1<<RXC0))); // Wait to receive data
	return UDR0; // Read data from UDR
}

void usart_send_string(char* str) {
	for (int i = 0; str[i]; i++) {
 116:	89 91       	ld	r24, Y+
 118:	81 11       	cpse	r24, r1
 11a:	fb cf       	rjmp	.-10     	; 0x112 <usart_send_string+0xe>
		usart_send(str[i]);
	}
}
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <signal_on>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 122:	2d 9a       	sbi	0x05, 5	; 5
 124:	08 95       	ret

00000126 <signal_off>:
 126:	2d 98       	cbi	0x05, 5	; 5
 128:	08 95       	ret

0000012a <__vector_1>:
	_delay_ms(60);
}

char buffer[32];

ISR(INT0_vect) {
 12a:	1f 92       	push	r1
 12c:	0f 92       	push	r0
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	0f 92       	push	r0
 132:	11 24       	eor	r1, r1
 134:	2f 93       	push	r18
 136:	3f 93       	push	r19
 138:	4f 93       	push	r20
 13a:	5f 93       	push	r21
 13c:	6f 93       	push	r22
 13e:	7f 93       	push	r23
 140:	8f 93       	push	r24
 142:	9f 93       	push	r25
 144:	af 93       	push	r26
 146:	bf 93       	push	r27
 148:	ef 93       	push	r30
 14a:	ff 93       	push	r31
	if (PIND & (1 << ECHO_PIN)) {
 14c:	4a 9b       	sbis	0x09, 2	; 9
 14e:	07 c0       	rjmp	.+14     	; 0x15e <__vector_1+0x34>
		TCNT2 = 0; // reset timer
 150:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
		overflow_count = 0;
 154:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <overflow_count+0x1>
 158:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <overflow_count>
 15c:	40 c0       	rjmp	.+128    	; 0x1de <__vector_1+0xb4>
	} else {
		uint16_t total_count = TCNT2 + overflow_count * 256;
 15e:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
 162:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <overflow_count>
 166:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <overflow_count+0x1>
		distance = total_count / 58; // calculate distance
 16a:	32 2f       	mov	r19, r18
 16c:	22 27       	eor	r18, r18
 16e:	28 0f       	add	r18, r24
 170:	31 1d       	adc	r19, r1
 172:	af e9       	ldi	r26, 0x9F	; 159
 174:	b6 e4       	ldi	r27, 0x46	; 70
 176:	0e 94 17 01 	call	0x22e	; 0x22e <__umulhisi3>
 17a:	92 95       	swap	r25
 17c:	82 95       	swap	r24
 17e:	8f 70       	andi	r24, 0x0F	; 15
 180:	89 27       	eor	r24, r25
 182:	9f 70       	andi	r25, 0x0F	; 15
 184:	89 27       	eor	r24, r25
 186:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <__data_end+0x1>
 18a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__data_end>
		sprintf(buffer, "distance: %u\n", distance);
 18e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 192:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 196:	9f 93       	push	r25
 198:	8f 93       	push	r24
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	9f 93       	push	r25
 1a0:	8f 93       	push	r24
 1a2:	82 e1       	ldi	r24, 0x12	; 18
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	9f 93       	push	r25
 1a8:	8f 93       	push	r24
 1aa:	0e 94 26 01 	call	0x24c	; 0x24c <sprintf>
		usart_send_string(buffer);
 1ae:	82 e1       	ldi	r24, 0x12	; 18
 1b0:	91 e0       	ldi	r25, 0x01	; 1
 1b2:	0e 94 82 00 	call	0x104	; 0x104 <usart_send_string>
		if (distance < 150) {
 1b6:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__data_end>
 1ba:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <__data_end+0x1>
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	86 39       	cpi	r24, 0x96	; 150
 1cc:	91 05       	cpc	r25, r1
 1ce:	28 f4       	brcc	.+10     	; 0x1da <__vector_1+0xb0>
			rgb_blue();
 1d0:	0e 94 76 00 	call	0xec	; 0xec <rgb_blue>
			signal_on();
 1d4:	0e 94 91 00 	call	0x122	; 0x122 <signal_on>
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <__vector_1+0xb4>
			//_delay_ms(5000);
		} else {
			signal_off();
 1da:	0e 94 93 00 	call	0x126	; 0x126 <signal_off>
		}
	}
}
 1de:	ff 91       	pop	r31
 1e0:	ef 91       	pop	r30
 1e2:	bf 91       	pop	r27
 1e4:	af 91       	pop	r26
 1e6:	9f 91       	pop	r25
 1e8:	8f 91       	pop	r24
 1ea:	7f 91       	pop	r23
 1ec:	6f 91       	pop	r22
 1ee:	5f 91       	pop	r21
 1f0:	4f 91       	pop	r20
 1f2:	3f 91       	pop	r19
 1f4:	2f 91       	pop	r18
 1f6:	0f 90       	pop	r0
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	0f 90       	pop	r0
 1fc:	1f 90       	pop	r1
 1fe:	18 95       	reti

00000200 <__vector_9>:

ISR(TIMER2_OVF_vect) {
 200:	1f 92       	push	r1
 202:	0f 92       	push	r0
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	0f 92       	push	r0
 208:	11 24       	eor	r1, r1
 20a:	8f 93       	push	r24
 20c:	9f 93       	push	r25
	overflow_count++; // Makes up for the insufficient number of bits in the TIMER0 register
 20e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <overflow_count>
 212:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <overflow_count+0x1>
 216:	01 96       	adiw	r24, 0x01	; 1
 218:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <overflow_count+0x1>
 21c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <overflow_count>
 220:	9f 91       	pop	r25
 222:	8f 91       	pop	r24
 224:	0f 90       	pop	r0
 226:	0f be       	out	0x3f, r0	; 63
 228:	0f 90       	pop	r0
 22a:	1f 90       	pop	r1
 22c:	18 95       	reti

0000022e <__umulhisi3>:
 22e:	a2 9f       	mul	r26, r18
 230:	b0 01       	movw	r22, r0
 232:	b3 9f       	mul	r27, r19
 234:	c0 01       	movw	r24, r0
 236:	a3 9f       	mul	r26, r19
 238:	70 0d       	add	r23, r0
 23a:	81 1d       	adc	r24, r1
 23c:	11 24       	eor	r1, r1
 23e:	91 1d       	adc	r25, r1
 240:	b2 9f       	mul	r27, r18
 242:	70 0d       	add	r23, r0
 244:	81 1d       	adc	r24, r1
 246:	11 24       	eor	r1, r1
 248:	91 1d       	adc	r25, r1
 24a:	08 95       	ret

0000024c <sprintf>:
 24c:	ae e0       	ldi	r26, 0x0E	; 14
 24e:	b0 e0       	ldi	r27, 0x00	; 0
 250:	ec e2       	ldi	r30, 0x2C	; 44
 252:	f1 e0       	ldi	r31, 0x01	; 1
 254:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__prologue_saves__+0x1c>
 258:	0d 89       	ldd	r16, Y+21	; 0x15
 25a:	1e 89       	ldd	r17, Y+22	; 0x16
 25c:	86 e0       	ldi	r24, 0x06	; 6
 25e:	8c 83       	std	Y+4, r24	; 0x04
 260:	1a 83       	std	Y+2, r17	; 0x02
 262:	09 83       	std	Y+1, r16	; 0x01
 264:	8f ef       	ldi	r24, 0xFF	; 255
 266:	9f e7       	ldi	r25, 0x7F	; 127
 268:	9e 83       	std	Y+6, r25	; 0x06
 26a:	8d 83       	std	Y+5, r24	; 0x05
 26c:	ae 01       	movw	r20, r28
 26e:	47 5e       	subi	r20, 0xE7	; 231
 270:	5f 4f       	sbci	r21, 0xFF	; 255
 272:	6f 89       	ldd	r22, Y+23	; 0x17
 274:	78 8d       	ldd	r23, Y+24	; 0x18
 276:	ce 01       	movw	r24, r28
 278:	01 96       	adiw	r24, 0x01	; 1
 27a:	0e 94 48 01 	call	0x290	; 0x290 <vfprintf>
 27e:	ef 81       	ldd	r30, Y+7	; 0x07
 280:	f8 85       	ldd	r31, Y+8	; 0x08
 282:	e0 0f       	add	r30, r16
 284:	f1 1f       	adc	r31, r17
 286:	10 82       	st	Z, r1
 288:	2e 96       	adiw	r28, 0x0e	; 14
 28a:	e4 e0       	ldi	r30, 0x04	; 4
 28c:	0c 94 03 04 	jmp	0x806	; 0x806 <__epilogue_restores__+0x1c>

00000290 <vfprintf>:
 290:	ab e0       	ldi	r26, 0x0B	; 11
 292:	b0 e0       	ldi	r27, 0x00	; 0
 294:	ee e4       	ldi	r30, 0x4E	; 78
 296:	f1 e0       	ldi	r31, 0x01	; 1
 298:	0c 94 d9 03 	jmp	0x7b2	; 0x7b2 <__prologue_saves__>
 29c:	6c 01       	movw	r12, r24
 29e:	7b 01       	movw	r14, r22
 2a0:	8a 01       	movw	r16, r20
 2a2:	fc 01       	movw	r30, r24
 2a4:	17 82       	std	Z+7, r1	; 0x07
 2a6:	16 82       	std	Z+6, r1	; 0x06
 2a8:	83 81       	ldd	r24, Z+3	; 0x03
 2aa:	81 ff       	sbrs	r24, 1
 2ac:	cc c1       	rjmp	.+920    	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 2ae:	ce 01       	movw	r24, r28
 2b0:	01 96       	adiw	r24, 0x01	; 1
 2b2:	3c 01       	movw	r6, r24
 2b4:	f6 01       	movw	r30, r12
 2b6:	93 81       	ldd	r25, Z+3	; 0x03
 2b8:	f7 01       	movw	r30, r14
 2ba:	93 fd       	sbrc	r25, 3
 2bc:	85 91       	lpm	r24, Z+
 2be:	93 ff       	sbrs	r25, 3
 2c0:	81 91       	ld	r24, Z+
 2c2:	7f 01       	movw	r14, r30
 2c4:	88 23       	and	r24, r24
 2c6:	09 f4       	brne	.+2      	; 0x2ca <vfprintf+0x3a>
 2c8:	ba c1       	rjmp	.+884    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 2ca:	85 32       	cpi	r24, 0x25	; 37
 2cc:	39 f4       	brne	.+14     	; 0x2dc <vfprintf+0x4c>
 2ce:	93 fd       	sbrc	r25, 3
 2d0:	85 91       	lpm	r24, Z+
 2d2:	93 ff       	sbrs	r25, 3
 2d4:	81 91       	ld	r24, Z+
 2d6:	7f 01       	movw	r14, r30
 2d8:	85 32       	cpi	r24, 0x25	; 37
 2da:	29 f4       	brne	.+10     	; 0x2e6 <vfprintf+0x56>
 2dc:	b6 01       	movw	r22, r12
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 2e4:	e7 cf       	rjmp	.-50     	; 0x2b4 <vfprintf+0x24>
 2e6:	91 2c       	mov	r9, r1
 2e8:	21 2c       	mov	r2, r1
 2ea:	31 2c       	mov	r3, r1
 2ec:	ff e1       	ldi	r31, 0x1F	; 31
 2ee:	f3 15       	cp	r31, r3
 2f0:	d8 f0       	brcs	.+54     	; 0x328 <vfprintf+0x98>
 2f2:	8b 32       	cpi	r24, 0x2B	; 43
 2f4:	79 f0       	breq	.+30     	; 0x314 <vfprintf+0x84>
 2f6:	38 f4       	brcc	.+14     	; 0x306 <vfprintf+0x76>
 2f8:	80 32       	cpi	r24, 0x20	; 32
 2fa:	79 f0       	breq	.+30     	; 0x31a <vfprintf+0x8a>
 2fc:	83 32       	cpi	r24, 0x23	; 35
 2fe:	a1 f4       	brne	.+40     	; 0x328 <vfprintf+0x98>
 300:	23 2d       	mov	r18, r3
 302:	20 61       	ori	r18, 0x10	; 16
 304:	1d c0       	rjmp	.+58     	; 0x340 <vfprintf+0xb0>
 306:	8d 32       	cpi	r24, 0x2D	; 45
 308:	61 f0       	breq	.+24     	; 0x322 <vfprintf+0x92>
 30a:	80 33       	cpi	r24, 0x30	; 48
 30c:	69 f4       	brne	.+26     	; 0x328 <vfprintf+0x98>
 30e:	23 2d       	mov	r18, r3
 310:	21 60       	ori	r18, 0x01	; 1
 312:	16 c0       	rjmp	.+44     	; 0x340 <vfprintf+0xb0>
 314:	83 2d       	mov	r24, r3
 316:	82 60       	ori	r24, 0x02	; 2
 318:	38 2e       	mov	r3, r24
 31a:	e3 2d       	mov	r30, r3
 31c:	e4 60       	ori	r30, 0x04	; 4
 31e:	3e 2e       	mov	r3, r30
 320:	2a c0       	rjmp	.+84     	; 0x376 <vfprintf+0xe6>
 322:	f3 2d       	mov	r31, r3
 324:	f8 60       	ori	r31, 0x08	; 8
 326:	1d c0       	rjmp	.+58     	; 0x362 <vfprintf+0xd2>
 328:	37 fc       	sbrc	r3, 7
 32a:	2d c0       	rjmp	.+90     	; 0x386 <vfprintf+0xf6>
 32c:	20 ed       	ldi	r18, 0xD0	; 208
 32e:	28 0f       	add	r18, r24
 330:	2a 30       	cpi	r18, 0x0A	; 10
 332:	40 f0       	brcs	.+16     	; 0x344 <vfprintf+0xb4>
 334:	8e 32       	cpi	r24, 0x2E	; 46
 336:	b9 f4       	brne	.+46     	; 0x366 <vfprintf+0xd6>
 338:	36 fc       	sbrc	r3, 6
 33a:	81 c1       	rjmp	.+770    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 33c:	23 2d       	mov	r18, r3
 33e:	20 64       	ori	r18, 0x40	; 64
 340:	32 2e       	mov	r3, r18
 342:	19 c0       	rjmp	.+50     	; 0x376 <vfprintf+0xe6>
 344:	36 fe       	sbrs	r3, 6
 346:	06 c0       	rjmp	.+12     	; 0x354 <vfprintf+0xc4>
 348:	8a e0       	ldi	r24, 0x0A	; 10
 34a:	98 9e       	mul	r9, r24
 34c:	20 0d       	add	r18, r0
 34e:	11 24       	eor	r1, r1
 350:	92 2e       	mov	r9, r18
 352:	11 c0       	rjmp	.+34     	; 0x376 <vfprintf+0xe6>
 354:	ea e0       	ldi	r30, 0x0A	; 10
 356:	2e 9e       	mul	r2, r30
 358:	20 0d       	add	r18, r0
 35a:	11 24       	eor	r1, r1
 35c:	22 2e       	mov	r2, r18
 35e:	f3 2d       	mov	r31, r3
 360:	f0 62       	ori	r31, 0x20	; 32
 362:	3f 2e       	mov	r3, r31
 364:	08 c0       	rjmp	.+16     	; 0x376 <vfprintf+0xe6>
 366:	8c 36       	cpi	r24, 0x6C	; 108
 368:	21 f4       	brne	.+8      	; 0x372 <vfprintf+0xe2>
 36a:	83 2d       	mov	r24, r3
 36c:	80 68       	ori	r24, 0x80	; 128
 36e:	38 2e       	mov	r3, r24
 370:	02 c0       	rjmp	.+4      	; 0x376 <vfprintf+0xe6>
 372:	88 36       	cpi	r24, 0x68	; 104
 374:	41 f4       	brne	.+16     	; 0x386 <vfprintf+0xf6>
 376:	f7 01       	movw	r30, r14
 378:	93 fd       	sbrc	r25, 3
 37a:	85 91       	lpm	r24, Z+
 37c:	93 ff       	sbrs	r25, 3
 37e:	81 91       	ld	r24, Z+
 380:	7f 01       	movw	r14, r30
 382:	81 11       	cpse	r24, r1
 384:	b3 cf       	rjmp	.-154    	; 0x2ec <vfprintf+0x5c>
 386:	98 2f       	mov	r25, r24
 388:	9f 7d       	andi	r25, 0xDF	; 223
 38a:	95 54       	subi	r25, 0x45	; 69
 38c:	93 30       	cpi	r25, 0x03	; 3
 38e:	28 f4       	brcc	.+10     	; 0x39a <vfprintf+0x10a>
 390:	0c 5f       	subi	r16, 0xFC	; 252
 392:	1f 4f       	sbci	r17, 0xFF	; 255
 394:	9f e3       	ldi	r25, 0x3F	; 63
 396:	99 83       	std	Y+1, r25	; 0x01
 398:	0d c0       	rjmp	.+26     	; 0x3b4 <vfprintf+0x124>
 39a:	83 36       	cpi	r24, 0x63	; 99
 39c:	31 f0       	breq	.+12     	; 0x3aa <vfprintf+0x11a>
 39e:	83 37       	cpi	r24, 0x73	; 115
 3a0:	71 f0       	breq	.+28     	; 0x3be <vfprintf+0x12e>
 3a2:	83 35       	cpi	r24, 0x53	; 83
 3a4:	09 f0       	breq	.+2      	; 0x3a8 <vfprintf+0x118>
 3a6:	59 c0       	rjmp	.+178    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 3a8:	21 c0       	rjmp	.+66     	; 0x3ec <vfprintf+0x15c>
 3aa:	f8 01       	movw	r30, r16
 3ac:	80 81       	ld	r24, Z
 3ae:	89 83       	std	Y+1, r24	; 0x01
 3b0:	0e 5f       	subi	r16, 0xFE	; 254
 3b2:	1f 4f       	sbci	r17, 0xFF	; 255
 3b4:	88 24       	eor	r8, r8
 3b6:	83 94       	inc	r8
 3b8:	91 2c       	mov	r9, r1
 3ba:	53 01       	movw	r10, r6
 3bc:	13 c0       	rjmp	.+38     	; 0x3e4 <vfprintf+0x154>
 3be:	28 01       	movw	r4, r16
 3c0:	f2 e0       	ldi	r31, 0x02	; 2
 3c2:	4f 0e       	add	r4, r31
 3c4:	51 1c       	adc	r5, r1
 3c6:	f8 01       	movw	r30, r16
 3c8:	a0 80       	ld	r10, Z
 3ca:	b1 80       	ldd	r11, Z+1	; 0x01
 3cc:	36 fe       	sbrs	r3, 6
 3ce:	03 c0       	rjmp	.+6      	; 0x3d6 <vfprintf+0x146>
 3d0:	69 2d       	mov	r22, r9
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <vfprintf+0x14a>
 3d6:	6f ef       	ldi	r22, 0xFF	; 255
 3d8:	7f ef       	ldi	r23, 0xFF	; 255
 3da:	c5 01       	movw	r24, r10
 3dc:	0e 94 34 03 	call	0x668	; 0x668 <strnlen>
 3e0:	4c 01       	movw	r8, r24
 3e2:	82 01       	movw	r16, r4
 3e4:	f3 2d       	mov	r31, r3
 3e6:	ff 77       	andi	r31, 0x7F	; 127
 3e8:	3f 2e       	mov	r3, r31
 3ea:	16 c0       	rjmp	.+44     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ec:	28 01       	movw	r4, r16
 3ee:	22 e0       	ldi	r18, 0x02	; 2
 3f0:	42 0e       	add	r4, r18
 3f2:	51 1c       	adc	r5, r1
 3f4:	f8 01       	movw	r30, r16
 3f6:	a0 80       	ld	r10, Z
 3f8:	b1 80       	ldd	r11, Z+1	; 0x01
 3fa:	36 fe       	sbrs	r3, 6
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fe:	69 2d       	mov	r22, r9
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	02 c0       	rjmp	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	6f ef       	ldi	r22, 0xFF	; 255
 406:	7f ef       	ldi	r23, 0xFF	; 255
 408:	c5 01       	movw	r24, r10
 40a:	0e 94 29 03 	call	0x652	; 0x652 <strnlen_P>
 40e:	4c 01       	movw	r8, r24
 410:	f3 2d       	mov	r31, r3
 412:	f0 68       	ori	r31, 0x80	; 128
 414:	3f 2e       	mov	r3, r31
 416:	82 01       	movw	r16, r4
 418:	33 fc       	sbrc	r3, 3
 41a:	1b c0       	rjmp	.+54     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 41c:	82 2d       	mov	r24, r2
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	88 16       	cp	r8, r24
 422:	99 06       	cpc	r9, r25
 424:	b0 f4       	brcc	.+44     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 426:	b6 01       	movw	r22, r12
 428:	80 e2       	ldi	r24, 0x20	; 32
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 430:	2a 94       	dec	r2
 432:	f4 cf       	rjmp	.-24     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 434:	f5 01       	movw	r30, r10
 436:	37 fc       	sbrc	r3, 7
 438:	85 91       	lpm	r24, Z+
 43a:	37 fe       	sbrs	r3, 7
 43c:	81 91       	ld	r24, Z+
 43e:	5f 01       	movw	r10, r30
 440:	b6 01       	movw	r22, r12
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 448:	21 10       	cpse	r2, r1
 44a:	2a 94       	dec	r2
 44c:	21 e0       	ldi	r18, 0x01	; 1
 44e:	82 1a       	sub	r8, r18
 450:	91 08       	sbc	r9, r1
 452:	81 14       	cp	r8, r1
 454:	91 04       	cpc	r9, r1
 456:	71 f7       	brne	.-36     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 458:	e8 c0       	rjmp	.+464    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 45a:	84 36       	cpi	r24, 0x64	; 100
 45c:	11 f0       	breq	.+4      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45e:	89 36       	cpi	r24, 0x69	; 105
 460:	41 f5       	brne	.+80     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 462:	f8 01       	movw	r30, r16
 464:	37 fe       	sbrs	r3, 7
 466:	07 c0       	rjmp	.+14     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 468:	60 81       	ld	r22, Z
 46a:	71 81       	ldd	r23, Z+1	; 0x01
 46c:	82 81       	ldd	r24, Z+2	; 0x02
 46e:	93 81       	ldd	r25, Z+3	; 0x03
 470:	0c 5f       	subi	r16, 0xFC	; 252
 472:	1f 4f       	sbci	r17, 0xFF	; 255
 474:	08 c0       	rjmp	.+16     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 476:	60 81       	ld	r22, Z
 478:	71 81       	ldd	r23, Z+1	; 0x01
 47a:	07 2e       	mov	r0, r23
 47c:	00 0c       	add	r0, r0
 47e:	88 0b       	sbc	r24, r24
 480:	99 0b       	sbc	r25, r25
 482:	0e 5f       	subi	r16, 0xFE	; 254
 484:	1f 4f       	sbci	r17, 0xFF	; 255
 486:	f3 2d       	mov	r31, r3
 488:	ff 76       	andi	r31, 0x6F	; 111
 48a:	3f 2e       	mov	r3, r31
 48c:	97 ff       	sbrs	r25, 7
 48e:	09 c0       	rjmp	.+18     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 490:	90 95       	com	r25
 492:	80 95       	com	r24
 494:	70 95       	com	r23
 496:	61 95       	neg	r22
 498:	7f 4f       	sbci	r23, 0xFF	; 255
 49a:	8f 4f       	sbci	r24, 0xFF	; 255
 49c:	9f 4f       	sbci	r25, 0xFF	; 255
 49e:	f0 68       	ori	r31, 0x80	; 128
 4a0:	3f 2e       	mov	r3, r31
 4a2:	2a e0       	ldi	r18, 0x0A	; 10
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	a3 01       	movw	r20, r6
 4a8:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__ultoa_invert>
 4ac:	88 2e       	mov	r8, r24
 4ae:	86 18       	sub	r8, r6
 4b0:	45 c0       	rjmp	.+138    	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 4b2:	85 37       	cpi	r24, 0x75	; 117
 4b4:	31 f4       	brne	.+12     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b6:	23 2d       	mov	r18, r3
 4b8:	2f 7e       	andi	r18, 0xEF	; 239
 4ba:	b2 2e       	mov	r11, r18
 4bc:	2a e0       	ldi	r18, 0x0A	; 10
 4be:	30 e0       	ldi	r19, 0x00	; 0
 4c0:	25 c0       	rjmp	.+74     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4c2:	93 2d       	mov	r25, r3
 4c4:	99 7f       	andi	r25, 0xF9	; 249
 4c6:	b9 2e       	mov	r11, r25
 4c8:	8f 36       	cpi	r24, 0x6F	; 111
 4ca:	c1 f0       	breq	.+48     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4cc:	18 f4       	brcc	.+6      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4ce:	88 35       	cpi	r24, 0x58	; 88
 4d0:	79 f0       	breq	.+30     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4d2:	b5 c0       	rjmp	.+362    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 4d4:	80 37       	cpi	r24, 0x70	; 112
 4d6:	19 f0       	breq	.+6      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d8:	88 37       	cpi	r24, 0x78	; 120
 4da:	21 f0       	breq	.+8      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4dc:	b0 c0       	rjmp	.+352    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 4de:	e9 2f       	mov	r30, r25
 4e0:	e0 61       	ori	r30, 0x10	; 16
 4e2:	be 2e       	mov	r11, r30
 4e4:	b4 fe       	sbrs	r11, 4
 4e6:	0d c0       	rjmp	.+26     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4e8:	fb 2d       	mov	r31, r11
 4ea:	f4 60       	ori	r31, 0x04	; 4
 4ec:	bf 2e       	mov	r11, r31
 4ee:	09 c0       	rjmp	.+18     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4f0:	34 fe       	sbrs	r3, 4
 4f2:	0a c0       	rjmp	.+20     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4f4:	29 2f       	mov	r18, r25
 4f6:	26 60       	ori	r18, 0x06	; 6
 4f8:	b2 2e       	mov	r11, r18
 4fa:	06 c0       	rjmp	.+12     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4fc:	28 e0       	ldi	r18, 0x08	; 8
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	05 c0       	rjmp	.+10     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 502:	20 e1       	ldi	r18, 0x10	; 16
 504:	30 e0       	ldi	r19, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 508:	20 e1       	ldi	r18, 0x10	; 16
 50a:	32 e0       	ldi	r19, 0x02	; 2
 50c:	f8 01       	movw	r30, r16
 50e:	b7 fe       	sbrs	r11, 7
 510:	07 c0       	rjmp	.+14     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 512:	60 81       	ld	r22, Z
 514:	71 81       	ldd	r23, Z+1	; 0x01
 516:	82 81       	ldd	r24, Z+2	; 0x02
 518:	93 81       	ldd	r25, Z+3	; 0x03
 51a:	0c 5f       	subi	r16, 0xFC	; 252
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	06 c0       	rjmp	.+12     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 520:	60 81       	ld	r22, Z
 522:	71 81       	ldd	r23, Z+1	; 0x01
 524:	80 e0       	ldi	r24, 0x00	; 0
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	0e 5f       	subi	r16, 0xFE	; 254
 52a:	1f 4f       	sbci	r17, 0xFF	; 255
 52c:	a3 01       	movw	r20, r6
 52e:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__ultoa_invert>
 532:	88 2e       	mov	r8, r24
 534:	86 18       	sub	r8, r6
 536:	fb 2d       	mov	r31, r11
 538:	ff 77       	andi	r31, 0x7F	; 127
 53a:	3f 2e       	mov	r3, r31
 53c:	36 fe       	sbrs	r3, 6
 53e:	0d c0       	rjmp	.+26     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 540:	23 2d       	mov	r18, r3
 542:	2e 7f       	andi	r18, 0xFE	; 254
 544:	a2 2e       	mov	r10, r18
 546:	89 14       	cp	r8, r9
 548:	58 f4       	brcc	.+22     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 54a:	34 fe       	sbrs	r3, 4
 54c:	0b c0       	rjmp	.+22     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 54e:	32 fc       	sbrc	r3, 2
 550:	09 c0       	rjmp	.+18     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 552:	83 2d       	mov	r24, r3
 554:	8e 7e       	andi	r24, 0xEE	; 238
 556:	a8 2e       	mov	r10, r24
 558:	05 c0       	rjmp	.+10     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 55a:	b8 2c       	mov	r11, r8
 55c:	a3 2c       	mov	r10, r3
 55e:	03 c0       	rjmp	.+6      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 560:	b8 2c       	mov	r11, r8
 562:	01 c0       	rjmp	.+2      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 564:	b9 2c       	mov	r11, r9
 566:	a4 fe       	sbrs	r10, 4
 568:	0f c0       	rjmp	.+30     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 56a:	fe 01       	movw	r30, r28
 56c:	e8 0d       	add	r30, r8
 56e:	f1 1d       	adc	r31, r1
 570:	80 81       	ld	r24, Z
 572:	80 33       	cpi	r24, 0x30	; 48
 574:	21 f4       	brne	.+8      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 576:	9a 2d       	mov	r25, r10
 578:	99 7e       	andi	r25, 0xE9	; 233
 57a:	a9 2e       	mov	r10, r25
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 57e:	a2 fe       	sbrs	r10, 2
 580:	06 c0       	rjmp	.+12     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 582:	b3 94       	inc	r11
 584:	b3 94       	inc	r11
 586:	04 c0       	rjmp	.+8      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 588:	8a 2d       	mov	r24, r10
 58a:	86 78       	andi	r24, 0x86	; 134
 58c:	09 f0       	breq	.+2      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58e:	b3 94       	inc	r11
 590:	a3 fc       	sbrc	r10, 3
 592:	11 c0       	rjmp	.+34     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 594:	a0 fe       	sbrs	r10, 0
 596:	06 c0       	rjmp	.+12     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 598:	b2 14       	cp	r11, r2
 59a:	88 f4       	brcc	.+34     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 59c:	28 0c       	add	r2, r8
 59e:	92 2c       	mov	r9, r2
 5a0:	9b 18       	sub	r9, r11
 5a2:	0e c0       	rjmp	.+28     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5a4:	b2 14       	cp	r11, r2
 5a6:	60 f4       	brcc	.+24     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5a8:	b6 01       	movw	r22, r12
 5aa:	80 e2       	ldi	r24, 0x20	; 32
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 5b2:	b3 94       	inc	r11
 5b4:	f7 cf       	rjmp	.-18     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5b6:	b2 14       	cp	r11, r2
 5b8:	18 f4       	brcc	.+6      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5ba:	2b 18       	sub	r2, r11
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5be:	98 2c       	mov	r9, r8
 5c0:	21 2c       	mov	r2, r1
 5c2:	a4 fe       	sbrs	r10, 4
 5c4:	10 c0       	rjmp	.+32     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5c6:	b6 01       	movw	r22, r12
 5c8:	80 e3       	ldi	r24, 0x30	; 48
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 5d0:	a2 fe       	sbrs	r10, 2
 5d2:	17 c0       	rjmp	.+46     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5d4:	a1 fc       	sbrc	r10, 1
 5d6:	03 c0       	rjmp	.+6      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5d8:	88 e7       	ldi	r24, 0x78	; 120
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5de:	88 e5       	ldi	r24, 0x58	; 88
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	b6 01       	movw	r22, r12
 5e4:	0c c0       	rjmp	.+24     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5e6:	8a 2d       	mov	r24, r10
 5e8:	86 78       	andi	r24, 0x86	; 134
 5ea:	59 f0       	breq	.+22     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5ec:	a1 fe       	sbrs	r10, 1
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5f0:	8b e2       	ldi	r24, 0x2B	; 43
 5f2:	01 c0       	rjmp	.+2      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f4:	80 e2       	ldi	r24, 0x20	; 32
 5f6:	a7 fc       	sbrc	r10, 7
 5f8:	8d e2       	ldi	r24, 0x2D	; 45
 5fa:	b6 01       	movw	r22, r12
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 602:	89 14       	cp	r8, r9
 604:	38 f4       	brcc	.+14     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 606:	b6 01       	movw	r22, r12
 608:	80 e3       	ldi	r24, 0x30	; 48
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 610:	9a 94       	dec	r9
 612:	f7 cf       	rjmp	.-18     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 614:	8a 94       	dec	r8
 616:	f3 01       	movw	r30, r6
 618:	e8 0d       	add	r30, r8
 61a:	f1 1d       	adc	r31, r1
 61c:	80 81       	ld	r24, Z
 61e:	b6 01       	movw	r22, r12
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 626:	81 10       	cpse	r8, r1
 628:	f5 cf       	rjmp	.-22     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 62a:	22 20       	and	r2, r2
 62c:	09 f4       	brne	.+2      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 62e:	42 ce       	rjmp	.-892    	; 0x2b4 <vfprintf+0x24>
 630:	b6 01       	movw	r22, r12
 632:	80 e2       	ldi	r24, 0x20	; 32
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 3f 03 	call	0x67e	; 0x67e <fputc>
 63a:	2a 94       	dec	r2
 63c:	f6 cf       	rjmp	.-20     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 63e:	f6 01       	movw	r30, r12
 640:	86 81       	ldd	r24, Z+6	; 0x06
 642:	97 81       	ldd	r25, Z+7	; 0x07
 644:	02 c0       	rjmp	.+4      	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 646:	8f ef       	ldi	r24, 0xFF	; 255
 648:	9f ef       	ldi	r25, 0xFF	; 255
 64a:	2b 96       	adiw	r28, 0x0b	; 11
 64c:	e2 e1       	ldi	r30, 0x12	; 18
 64e:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__epilogue_restores__>

00000652 <strnlen_P>:
 652:	fc 01       	movw	r30, r24
 654:	05 90       	lpm	r0, Z+
 656:	61 50       	subi	r22, 0x01	; 1
 658:	70 40       	sbci	r23, 0x00	; 0
 65a:	01 10       	cpse	r0, r1
 65c:	d8 f7       	brcc	.-10     	; 0x654 <strnlen_P+0x2>
 65e:	80 95       	com	r24
 660:	90 95       	com	r25
 662:	8e 0f       	add	r24, r30
 664:	9f 1f       	adc	r25, r31
 666:	08 95       	ret

00000668 <strnlen>:
 668:	fc 01       	movw	r30, r24
 66a:	61 50       	subi	r22, 0x01	; 1
 66c:	70 40       	sbci	r23, 0x00	; 0
 66e:	01 90       	ld	r0, Z+
 670:	01 10       	cpse	r0, r1
 672:	d8 f7       	brcc	.-10     	; 0x66a <strnlen+0x2>
 674:	80 95       	com	r24
 676:	90 95       	com	r25
 678:	8e 0f       	add	r24, r30
 67a:	9f 1f       	adc	r25, r31
 67c:	08 95       	ret

0000067e <fputc>:
 67e:	0f 93       	push	r16
 680:	1f 93       	push	r17
 682:	cf 93       	push	r28
 684:	df 93       	push	r29
 686:	fb 01       	movw	r30, r22
 688:	23 81       	ldd	r18, Z+3	; 0x03
 68a:	21 fd       	sbrc	r18, 1
 68c:	03 c0       	rjmp	.+6      	; 0x694 <fputc+0x16>
 68e:	8f ef       	ldi	r24, 0xFF	; 255
 690:	9f ef       	ldi	r25, 0xFF	; 255
 692:	2c c0       	rjmp	.+88     	; 0x6ec <fputc+0x6e>
 694:	22 ff       	sbrs	r18, 2
 696:	16 c0       	rjmp	.+44     	; 0x6c4 <fputc+0x46>
 698:	46 81       	ldd	r20, Z+6	; 0x06
 69a:	57 81       	ldd	r21, Z+7	; 0x07
 69c:	24 81       	ldd	r18, Z+4	; 0x04
 69e:	35 81       	ldd	r19, Z+5	; 0x05
 6a0:	42 17       	cp	r20, r18
 6a2:	53 07       	cpc	r21, r19
 6a4:	44 f4       	brge	.+16     	; 0x6b6 <fputc+0x38>
 6a6:	a0 81       	ld	r26, Z
 6a8:	b1 81       	ldd	r27, Z+1	; 0x01
 6aa:	9d 01       	movw	r18, r26
 6ac:	2f 5f       	subi	r18, 0xFF	; 255
 6ae:	3f 4f       	sbci	r19, 0xFF	; 255
 6b0:	31 83       	std	Z+1, r19	; 0x01
 6b2:	20 83       	st	Z, r18
 6b4:	8c 93       	st	X, r24
 6b6:	26 81       	ldd	r18, Z+6	; 0x06
 6b8:	37 81       	ldd	r19, Z+7	; 0x07
 6ba:	2f 5f       	subi	r18, 0xFF	; 255
 6bc:	3f 4f       	sbci	r19, 0xFF	; 255
 6be:	37 83       	std	Z+7, r19	; 0x07
 6c0:	26 83       	std	Z+6, r18	; 0x06
 6c2:	14 c0       	rjmp	.+40     	; 0x6ec <fputc+0x6e>
 6c4:	8b 01       	movw	r16, r22
 6c6:	ec 01       	movw	r28, r24
 6c8:	fb 01       	movw	r30, r22
 6ca:	00 84       	ldd	r0, Z+8	; 0x08
 6cc:	f1 85       	ldd	r31, Z+9	; 0x09
 6ce:	e0 2d       	mov	r30, r0
 6d0:	09 95       	icall
 6d2:	89 2b       	or	r24, r25
 6d4:	e1 f6       	brne	.-72     	; 0x68e <fputc+0x10>
 6d6:	d8 01       	movw	r26, r16
 6d8:	16 96       	adiw	r26, 0x06	; 6
 6da:	8d 91       	ld	r24, X+
 6dc:	9c 91       	ld	r25, X
 6de:	17 97       	sbiw	r26, 0x07	; 7
 6e0:	01 96       	adiw	r24, 0x01	; 1
 6e2:	17 96       	adiw	r26, 0x07	; 7
 6e4:	9c 93       	st	X, r25
 6e6:	8e 93       	st	-X, r24
 6e8:	16 97       	sbiw	r26, 0x06	; 6
 6ea:	ce 01       	movw	r24, r28
 6ec:	df 91       	pop	r29
 6ee:	cf 91       	pop	r28
 6f0:	1f 91       	pop	r17
 6f2:	0f 91       	pop	r16
 6f4:	08 95       	ret

000006f6 <__ultoa_invert>:
 6f6:	fa 01       	movw	r30, r20
 6f8:	aa 27       	eor	r26, r26
 6fa:	28 30       	cpi	r18, 0x08	; 8
 6fc:	51 f1       	breq	.+84     	; 0x752 <__ultoa_invert+0x5c>
 6fe:	20 31       	cpi	r18, 0x10	; 16
 700:	81 f1       	breq	.+96     	; 0x762 <__ultoa_invert+0x6c>
 702:	e8 94       	clt
 704:	6f 93       	push	r22
 706:	6e 7f       	andi	r22, 0xFE	; 254
 708:	6e 5f       	subi	r22, 0xFE	; 254
 70a:	7f 4f       	sbci	r23, 0xFF	; 255
 70c:	8f 4f       	sbci	r24, 0xFF	; 255
 70e:	9f 4f       	sbci	r25, 0xFF	; 255
 710:	af 4f       	sbci	r26, 0xFF	; 255
 712:	b1 e0       	ldi	r27, 0x01	; 1
 714:	3e d0       	rcall	.+124    	; 0x792 <__ultoa_invert+0x9c>
 716:	b4 e0       	ldi	r27, 0x04	; 4
 718:	3c d0       	rcall	.+120    	; 0x792 <__ultoa_invert+0x9c>
 71a:	67 0f       	add	r22, r23
 71c:	78 1f       	adc	r23, r24
 71e:	89 1f       	adc	r24, r25
 720:	9a 1f       	adc	r25, r26
 722:	a1 1d       	adc	r26, r1
 724:	68 0f       	add	r22, r24
 726:	79 1f       	adc	r23, r25
 728:	8a 1f       	adc	r24, r26
 72a:	91 1d       	adc	r25, r1
 72c:	a1 1d       	adc	r26, r1
 72e:	6a 0f       	add	r22, r26
 730:	71 1d       	adc	r23, r1
 732:	81 1d       	adc	r24, r1
 734:	91 1d       	adc	r25, r1
 736:	a1 1d       	adc	r26, r1
 738:	20 d0       	rcall	.+64     	; 0x77a <__ultoa_invert+0x84>
 73a:	09 f4       	brne	.+2      	; 0x73e <__ultoa_invert+0x48>
 73c:	68 94       	set
 73e:	3f 91       	pop	r19
 740:	2a e0       	ldi	r18, 0x0A	; 10
 742:	26 9f       	mul	r18, r22
 744:	11 24       	eor	r1, r1
 746:	30 19       	sub	r19, r0
 748:	30 5d       	subi	r19, 0xD0	; 208
 74a:	31 93       	st	Z+, r19
 74c:	de f6       	brtc	.-74     	; 0x704 <__ultoa_invert+0xe>
 74e:	cf 01       	movw	r24, r30
 750:	08 95       	ret
 752:	46 2f       	mov	r20, r22
 754:	47 70       	andi	r20, 0x07	; 7
 756:	40 5d       	subi	r20, 0xD0	; 208
 758:	41 93       	st	Z+, r20
 75a:	b3 e0       	ldi	r27, 0x03	; 3
 75c:	0f d0       	rcall	.+30     	; 0x77c <__ultoa_invert+0x86>
 75e:	c9 f7       	brne	.-14     	; 0x752 <__ultoa_invert+0x5c>
 760:	f6 cf       	rjmp	.-20     	; 0x74e <__ultoa_invert+0x58>
 762:	46 2f       	mov	r20, r22
 764:	4f 70       	andi	r20, 0x0F	; 15
 766:	40 5d       	subi	r20, 0xD0	; 208
 768:	4a 33       	cpi	r20, 0x3A	; 58
 76a:	18 f0       	brcs	.+6      	; 0x772 <__ultoa_invert+0x7c>
 76c:	49 5d       	subi	r20, 0xD9	; 217
 76e:	31 fd       	sbrc	r19, 1
 770:	40 52       	subi	r20, 0x20	; 32
 772:	41 93       	st	Z+, r20
 774:	02 d0       	rcall	.+4      	; 0x77a <__ultoa_invert+0x84>
 776:	a9 f7       	brne	.-22     	; 0x762 <__ultoa_invert+0x6c>
 778:	ea cf       	rjmp	.-44     	; 0x74e <__ultoa_invert+0x58>
 77a:	b4 e0       	ldi	r27, 0x04	; 4
 77c:	a6 95       	lsr	r26
 77e:	97 95       	ror	r25
 780:	87 95       	ror	r24
 782:	77 95       	ror	r23
 784:	67 95       	ror	r22
 786:	ba 95       	dec	r27
 788:	c9 f7       	brne	.-14     	; 0x77c <__ultoa_invert+0x86>
 78a:	00 97       	sbiw	r24, 0x00	; 0
 78c:	61 05       	cpc	r22, r1
 78e:	71 05       	cpc	r23, r1
 790:	08 95       	ret
 792:	9b 01       	movw	r18, r22
 794:	ac 01       	movw	r20, r24
 796:	0a 2e       	mov	r0, r26
 798:	06 94       	lsr	r0
 79a:	57 95       	ror	r21
 79c:	47 95       	ror	r20
 79e:	37 95       	ror	r19
 7a0:	27 95       	ror	r18
 7a2:	ba 95       	dec	r27
 7a4:	c9 f7       	brne	.-14     	; 0x798 <__ultoa_invert+0xa2>
 7a6:	62 0f       	add	r22, r18
 7a8:	73 1f       	adc	r23, r19
 7aa:	84 1f       	adc	r24, r20
 7ac:	95 1f       	adc	r25, r21
 7ae:	a0 1d       	adc	r26, r0
 7b0:	08 95       	ret

000007b2 <__prologue_saves__>:
 7b2:	2f 92       	push	r2
 7b4:	3f 92       	push	r3
 7b6:	4f 92       	push	r4
 7b8:	5f 92       	push	r5
 7ba:	6f 92       	push	r6
 7bc:	7f 92       	push	r7
 7be:	8f 92       	push	r8
 7c0:	9f 92       	push	r9
 7c2:	af 92       	push	r10
 7c4:	bf 92       	push	r11
 7c6:	cf 92       	push	r12
 7c8:	df 92       	push	r13
 7ca:	ef 92       	push	r14
 7cc:	ff 92       	push	r15
 7ce:	0f 93       	push	r16
 7d0:	1f 93       	push	r17
 7d2:	cf 93       	push	r28
 7d4:	df 93       	push	r29
 7d6:	cd b7       	in	r28, 0x3d	; 61
 7d8:	de b7       	in	r29, 0x3e	; 62
 7da:	ca 1b       	sub	r28, r26
 7dc:	db 0b       	sbc	r29, r27
 7de:	0f b6       	in	r0, 0x3f	; 63
 7e0:	f8 94       	cli
 7e2:	de bf       	out	0x3e, r29	; 62
 7e4:	0f be       	out	0x3f, r0	; 63
 7e6:	cd bf       	out	0x3d, r28	; 61
 7e8:	09 94       	ijmp

000007ea <__epilogue_restores__>:
 7ea:	2a 88       	ldd	r2, Y+18	; 0x12
 7ec:	39 88       	ldd	r3, Y+17	; 0x11
 7ee:	48 88       	ldd	r4, Y+16	; 0x10
 7f0:	5f 84       	ldd	r5, Y+15	; 0x0f
 7f2:	6e 84       	ldd	r6, Y+14	; 0x0e
 7f4:	7d 84       	ldd	r7, Y+13	; 0x0d
 7f6:	8c 84       	ldd	r8, Y+12	; 0x0c
 7f8:	9b 84       	ldd	r9, Y+11	; 0x0b
 7fa:	aa 84       	ldd	r10, Y+10	; 0x0a
 7fc:	b9 84       	ldd	r11, Y+9	; 0x09
 7fe:	c8 84       	ldd	r12, Y+8	; 0x08
 800:	df 80       	ldd	r13, Y+7	; 0x07
 802:	ee 80       	ldd	r14, Y+6	; 0x06
 804:	fd 80       	ldd	r15, Y+5	; 0x05
 806:	0c 81       	ldd	r16, Y+4	; 0x04
 808:	1b 81       	ldd	r17, Y+3	; 0x03
 80a:	aa 81       	ldd	r26, Y+2	; 0x02
 80c:	b9 81       	ldd	r27, Y+1	; 0x01
 80e:	ce 0f       	add	r28, r30
 810:	d1 1d       	adc	r29, r1
 812:	0f b6       	in	r0, 0x3f	; 63
 814:	f8 94       	cli
 816:	de bf       	out	0x3e, r29	; 62
 818:	0f be       	out	0x3f, r0	; 63
 81a:	cd bf       	out	0x3d, r28	; 61
 81c:	ed 01       	movw	r28, r26
 81e:	08 95       	ret

00000820 <_exit>:
 820:	f8 94       	cli

00000822 <__stop_program>:
 822:	ff cf       	rjmp	.-2      	; 0x822 <__stop_program>
